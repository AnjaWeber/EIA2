var __extends = (this && this.__extends) || (function () {
    var extendStatics = function (d, b) {
        extendStatics = Object.setPrototypeOf ||
            ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||
            function (d, b) { for (var p in b) if (Object.prototype.hasOwnProperty.call(b, p)) d[p] = b[p]; };
        return extendStatics(d, b);
    };
    return function (d, b) {
        if (typeof b !== "function" && b !== null)
            throw new TypeError("Class extends value " + String(b) + " is not a constructor or null");
        extendStatics(d, b);
        function __() { this.constructor = d; }
        d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());
    };
})();
var GardenSimulator;
(function (GardenSimulator) {
    var Salad = /** @class */ (function (_super) {
        __extends(Salad, _super);
        function Salad(_position, _size) {
            return _super.call(this, _position, _size, 15, 85, 25, 15, 70, 12, 27, 5) || this;
        }
        Salad.prototype.draw = function () {
            _super.prototype.draw.call(this);
            GardenSimulator.crc2.save();
            GardenSimulator.crc2.translate(this.position.x, this.position.y);
            GardenSimulator.crc2.scale(this.size.x / 100, this.size.y / 100);
            if (this.ageInDays < this.growthDurationInDays / 3) {
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(50, 93, 7, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
            }
            else if (this.ageInDays < this.growthDurationInDays) {
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(50, 80, 5, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.lineWidth = 0.5;
                GardenSimulator.crc2.strokeStyle = "black";
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(50, 75, 7, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(50, 95, 7, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(42, 90, 7, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(59, 90, 7, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(42, 80, 8, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(55, 80, 7, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(50, 78, 6, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(60, 79, 6, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(42, 85, 5, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(46, 94, 5, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(55, 94, 5, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(58, 85, 5, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(50, 86, 5, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
            }
            else {
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(50, 80, 5, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.lineWidth = 0.5;
                GardenSimulator.crc2.strokeStyle = "black";
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(63, 78, 9, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(52, 73, 9, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(39, 77, 9, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(37, 87, 9, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(42, 91, 9, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(58, 91, 9, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(65, 90, 9, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(42, 90, 7, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(59, 90, 7, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(42, 80, 8, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(55, 80, 7, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(50, 78, 6, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(60, 79, 6, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(42, 85, 5, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(46, 94, 5, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(55, 94, 5, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(58, 85, 5, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
                GardenSimulator.crc2.beginPath();
                GardenSimulator.crc2.arc(50, 86, 5, 0, 2 * Math.PI);
                GardenSimulator.crc2.fillStyle = "green";
                GardenSimulator.crc2.fill();
                GardenSimulator.crc2.stroke();
            }
            GardenSimulator.crc2.restore();
        };
        return Salad;
    }(GardenSimulator.PlantedField));
    GardenSimulator.Salad = Salad;
})(GardenSimulator || (GardenSimulator = {}));
//# sourceMappingURL=Salad.js.map